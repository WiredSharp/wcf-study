//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AuthenticatedServiceHost.Authentication {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Authentication.IAuthenticatedService")]
    public interface IAuthenticatedService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticatedService/GetUserName", ReplyAction="http://tempuri.org/IAuthenticatedService/GetUserNameResponse")]
        string[] GetUserName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticatedService/GetUserName", ReplyAction="http://tempuri.org/IAuthenticatedService/GetUserNameResponse")]
        System.Threading.Tasks.Task<string[]> GetUserNameAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticatedServiceChannel : AuthenticatedServiceHost.Authentication.IAuthenticatedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticatedServiceClient : System.ServiceModel.ClientBase<AuthenticatedServiceHost.Authentication.IAuthenticatedService>, AuthenticatedServiceHost.Authentication.IAuthenticatedService {
        
        public AuthenticatedServiceClient() {
        }
        
        public AuthenticatedServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticatedServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticatedServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticatedServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetUserName() {
            return base.Channel.GetUserName();
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserNameAsync() {
            return base.Channel.GetUserNameAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Authentication.IImpersonationService")]
    public interface IImpersonationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpersonationService/Impersonate", ReplyAction="http://tempuri.org/IImpersonationService/ImpersonateResponse")]
        string[] Impersonate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpersonationService/Impersonate", ReplyAction="http://tempuri.org/IImpersonationService/ImpersonateResponse")]
        System.Threading.Tasks.Task<string[]> ImpersonateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImpersonationServiceChannel : AuthenticatedServiceHost.Authentication.IImpersonationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImpersonationServiceClient : System.ServiceModel.ClientBase<AuthenticatedServiceHost.Authentication.IImpersonationService>, AuthenticatedServiceHost.Authentication.IImpersonationService {
        
        public ImpersonationServiceClient() {
        }
        
        public ImpersonationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImpersonationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImpersonationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImpersonationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] Impersonate() {
            return base.Channel.Impersonate();
        }
        
        public System.Threading.Tasks.Task<string[]> ImpersonateAsync() {
            return base.Channel.ImpersonateAsync();
        }
    }
}
